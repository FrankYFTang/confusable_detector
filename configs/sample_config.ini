
[DATASET]
# Directory containing training images in png file format.
TRAIN_DATA_DIR = data/charset_1k
# Directory containing test images in png file format.
TEST_DATA_DIR = data/charset_1k_test
# Path to label file.
LABEL_FILE = source/charset_1k.txt

[IMAGE]
# Image height.
HEIGHT = 20
# Image width.
WIDTH = 20
# Format of the input image. If true, handled as grayscale image. If false,
# handled as RGB image.
GRAYSCALE_IN = False
# Format of the output image. If true, train model on grayscale image. If false,
# train model on RGB image.
GRAYSCALE_OUT = False

[TRAIN_TEST_SPEC]
# Training batch size.
TRAIN_BATCH_SIZE = 64
# Test batch size.
TEST_BATCH_SIZE = 1
# Size of the shuffling buffer. Setting it to a higher value will improve the
# shuffling but cost more time for get dataset.
SHUFFLE_BUFFER_SIZE = 200
# Allows next n entries to be read in and augmented while the training in
# on-going.
PREFETCH_BUFFER_SIZE = 20

[DATA_AUGMENTATION]
# If true, rotate the image by a random degree.
RANDOM_ROTATE = True
# Stdandard deviation of normal distribution to rotate the image. The unit of
# this value is the rotation angle in degree.
ROTATE_STDDEV = 0.35

# If true, zoom-in on the image by a random percentage.
RANDOM_ZOOM = True
# Maximum zoom-in percentage.
ZOOM_MAX_PERCENT = 4.0
# Standard deviation of the half normal distribution to zoom-in the image. The
# unit of this value is the zoom in percentage.
ZOOM_STDDEV = 0.4

# If true, resize image before output.
RESIZE = True
# Resize to this height.
RESIZE_HEIGHT = 32
# Resize to this width.
RESIZE_WIDTH = 32

[MODEL]
# Model name.
NAME = ResNet50
# Shape of input tensor.
INPUT_SHAPE = 32, 32, 3
# Shape of output tensor.
OUTPUT_SHAPE = 1000

[CLASSIFIER_TRAINING]
# Checkpoint directory contains the output weights.
CKPT_DIR = ckpts/ResNet50Base
# Total steps to train the classifiers.
MAX_STEP = 30000
# Optimizer name.
OPTIMIZER = Adam
# Boundaries to change the learning rate.
LR_BOUNDARIES = 20000, 25000
# Initial learning rate and learning rates on the boundaries specified above.
# The number of items here is one less than the number of items in
# LR_BOUNDARIES.
LR_VALUES = 0.001, 0.0001, 0.00001

[TRIPLET_TRAINING]
# Directory of the initial weights of transfer learning.
INIT_DIR = ckpts/ResNet50Base
# Checkpoint directory contains the output weights of transfer learning.
CKPT_DIR = ckpts/TripletTransferTF
# Number of cycles to train.
CYCLES = 150
# Number of epochs in each cycle.
EPOCHS = 8
# How many classes to prune to during each cycle. Make sure FILTER_SIZE is
# smaller than TRAIN_BATCH_SIZE to guarantee positive selection in triplet loss.
FILTER_SIZE = 40
# Triplet loss margin how much space to leave between positive and negative
# examples.
MARGIN = 1.0
# Optimizer name.
OPTIMIZER = Adam
# Learning rate value.
LEARNING_RATE = 0.001
# Regular expression of the variables (layers) to freeze. Weights of the freezed
# variables won't change during training.
FREEZE_VARS = ^conv1*, ^conv2*, ^conv3*, ^conv4*



[DATASET]
# Training image (.png) directory
TRAIN_DATA_DIR = data/charset_1k
# Test image (.png) directory
TEST_DATA_DIR = data/charset_1k_test
# Path to label file
LABEL_FILE = source/charset_1k.txt

[IMAGE]
# Image height
HEIGHT = 20
# Image width
WIDTH = 20
# Whether original image is in grayscale or RGB format
GRAYSCALE_IN = False
# Whether to return grayscale image as output
GRAYSCALE_OUT = False

[TRAIN_TEST_SPEC]
# Training batch size
TRAIN_BATCH_SIZE = 64
# Test batch size
TEST_BATCH_SIZE = 1
# higher: runs slower with better shuffling
SHUFFLE_BUFFER_SIZE = 200
# Allows next n elements to be prepared
PREFETCH_BUFFER_SIZE = 20

[DATA_AUG]
# If true, randomly rotate image by a certain degree
RANDOM_ROTATE = True
# Stddev of normal distribution (rotation angle in degree)
ROTATE_STDDEV = 0.35

# If true, randomly zoom in on the image by certain percent
RANDOM_ZOOM = True
# Zoom in on the image by at most this percent
ZOOM_PERCENT = 4.0
# Stddev of normal distribution (percentage to zoom in on)
ZOOM_STDDEV = 0.4

# If true, resize image before output
RESIZE = True
# Resize to this height
RESIZE_HEIGHT = 32
# Resize to this width
RESIZE_WIDTH = 32

[MODEL]
# Model name
NAME = ResNet50
# Shape of input tensor
INPUT_DIM1 = 32
INPUT_DIM2 = 32
INPUT_DIM3 = 3
# Shape of output tensor
OUTPUT_SHAPE = 1000

[CLASSIFIER_TRAINING]
# Checkpoint directory (where weights will be stored)
CKPT_DIR = ckpts/123
# Total steps to run (train classifier)
MAX_STEP = 30000
# Optimizer name
OPTIMIZER = Adam
# Boundaries where learning rate chagnes
LR_BOUNDARIES = 20000, 25000
# What the initial learning rate is and what it changes to at boundaries
LR_VALUES = 0.001, 0.0001, 0.00001

[TRIPLET_TRAINING]
# Directory where intial weights for transfer learning is sotred
INIT_DIR = ckpts/ResNet50Base
# Checkpoint directory (where weights will be stored)
CKPT_DIR = ckpts/TripletTransferTF
# Number of cycles to train
CYCLES = 150
# Number of epoch for each cycle
EPOCHS = 8
# How many classes to keep in each cycle
FILTER_SIZE = 40
# Triplet loss margin
MARGIN = 1.0
# Loss function name
OPTIMIZER = Adam
# Learnin rate value
LR_VALUE = 0.001
# Name of the variables to free (exclude from training)
FREEZE_VARS = conv1, conv2, conv3, conv4

